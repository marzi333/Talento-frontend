import React from "react";
import {
  Page,
  Text,
  View,
  Document,
  StyleSheet,
  Font,
} from "@react-pdf/renderer";

// Create styles
const styles = StyleSheet.create({
  seniority: {
    position: "absolute",
    top: 100, // You can adjust these numbers
    right: 25,
    justifyContent: "center",
    alignItems: "center",
  },
  seniorityText: {
    color: "green",
    fontSize: 16,
    fontWeight: "bold",
  },
  pageNumberCircle: {
    position: "absolute",
    top: 30, // You can adjust these numbers
    right: 35,
    width: 50,
    height: 50,
    borderRadius: 25, // Half of width and height to make it a circle
    backgroundColor: "green",
    justifyContent: "center",
    alignItems: "center",
  },
  pageNumberText: {
    color: "white",
    fontSize: 16,
  },
  divider: {
    borderBottom: 1,
    borderBottomColor: "black",
    marginBottom: 10, // Add margin at the bottom
    marginTop: 5, // Add margin at the top
  },
  page: {
    flexDirection: "column",
    backgroundColor: "#E4E4E4",
    padding: "20px",
  },
  header: {
    fontSize: 24,
    textAlign: "center",
    marginBottom: 10,
  },
  subheader: {
    fontSize: 10,
    color: "grey",
    textAlign: "center",
    marginBottom: 5,
  },
  subheaderspacer: {
    marginBottom: 20,
  },
  section: {
    margin: 5,
    padding: 5,
    flexGrow: 1,
  },
  education: {
    textDecoration: "underline",
    fontWeight: "bold",
    marginBottom: 10,
  },
  experience: {
    fontWeight: "bold",
    marginBottom: 10,
    textDecoration: "underline",
  },
  skills: {
    fontWeight: "bold",
    marginBottom: 10,
    textDecoration: "underline",
  },
  bulletPointDouble: {
    flexDirection: "row",
    justifyContent: "space-between", // Aligns children to both ends of the container
  },
  bulletPointContainer: {
    flex: 1, // Each container will take half the width
  },
  bulletPoint: {
    flexDirection: "row",
    alignItems: "center",
  },

  bulletIcon: {
    width: 10,
    textAlign: "center",
  },
  bulletText: {
    flex: 1,
    fontSize: 11,
    marginBottom: 5,
  },
  bulletTextGreen: {
    flex: 1,
    color: "green",
    fontSize: 11,
    marginBottom: 5,
  },
  bulletIconGreen: {
    width: 10,
    textAlign: "center",
    color: "green",
  },
  spacer: {
    width: 10,
  },
});

// Create Document Component
const AutogeneratedCV = () => {
  const data = {
    experience_info: {
      reason:
        "The candidate has 2 years of experience as a Junior Software Engineer at Tech Innovators Inc., where they have demonstrated their ability to work on various aspects of software engineering, including Agile Development, Documentation, Problem Solving, and Cloud Provider Experience. They have also gained experience in software testing and debugging, as well as developing scripts and applications using Python. Additionally, the candidate has experience with Kubernetes, including deploying and managing clusters across different infrastructures.",
      seniority_level: 2,
    },
    message: "Successfully received data",
    relevant_skills: [
      "Cloud Provider Experience",
      "GitOps",
      "Programming Proficiency",
      "Java",
      "Python",
    ],
    similarity_score: 0.8062427655884138,
    more_info: {
      answers_info: {
        Education: [],
        Experiences: [
          "I encountered a complex problem related to optimizing multi-cloud deployment efficiency. I tackled this challenge by analyzing our existing procedures, collaborating with the cloud team, and using Python scripts with GitOps principles to automate resource management.",
          "I participated in code reviews. In one instance, I identified a security vulnerability in the authentication system of a critical project. I suggested improvements, and my feedback led to a code refactor, enhancing the application's security.",
          "During my internship at WeStart, I worked on a complex multi-cloud project involving AWS, Azure, and GCP. The main challenge was ensuring compatibility and cost optimization across platforms. To address this, I collaborated with the cloud team and used Python to automate resource management, improving efficiency and reducing errors.",
          "During my internship at WeStart, I gained experience with Kubernetes, including deploying and managing clusters across different infrastructures. One challenge was ensuring consistent performance across various cloud providers. To address this, I researched and used infrastructure as code templates customized for each provider.",
        ],
        Skills: ["Python", "GitOps", "Kubernetes", "AWS", "Azure", "GCP"],
      },
      detailed_info: {
        Education: [
          "Master of Science in Computer Science at Universität Mannheim",
          "Bachelor of Science in Computer Science at Universität Mannheim",
        ],
        Experiences: [
          "Junior Software Engineer at Tech Innovators Inc.",
          "Software Development Intern at ABC Software Inc.",
          "Cloud Solutions Development Intern at WeStart",
        ],
        Skills: ["Python", "Java", "GitOps", "AWS", "Agile Project Management"],
      },
      main_info: {
        Age: "Not known",
        Email: "hello@reallygreatsite.com",
        Name: "Max Musterman",
        Nationality: "Not known",
      },
      message: "Successfully received data",
    },
  };

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.pageNumberCircle}>
          <Text style={styles.pageNumberText}>{`${(
            data.similarity_score * 100
          ).toFixed(1)}%`}</Text>
        </View>
        <View style={styles.seniority}>
          <Text style={styles.seniorityText}>
            Seniority: {data.experience_info.seniority_level}
          </Text>
        </View>

        <Text style={styles.header}>{data.more_info.main_info.Name}</Text>
        <Text style={styles.subheader}>
          Email: {data.more_info.main_info.Email}
        </Text>
        <Text style={styles.subheader}>
          Nationality: {data.more_info.main_info.Nationality}
        </Text>
        <Text style={styles.subheaderspacer}></Text>
        <View style={styles.section}>
          <Text style={styles.education}>Education</Text>
          <View style={styles.divider}></View>
          <View style={styles.bulletPointDouble}>
            {/* Left - Dark Bullet Points */}
            <View style={styles.bulletPointContainer}>
              {data.more_info.detailed_info.Education.map((answer, index) => (
                <View style={styles.bulletPoint} key={index}>
                  <Text style={styles.bulletIcon}>•</Text>
                  <Text style={styles.bulletText}>{answer}</Text>
                </View>
              ))}
            </View>

            {/* Right - Green Bullet Points */}
            <View style={styles.bulletPointContainer}>
              {data.more_info.answers_info.Education.map((answer, index) => (
                <View style={styles.bulletPoint} key={index}>
                  <Text style={styles.bulletIconGreen}>•</Text>
                  <Text style={styles.bulletTextGreen}>{answer}</Text>
                </View>
              ))}
            </View>
          </View>
        </View>
        <View style={styles.section}>
          {/* @ts-expect-error Server Component */}
          <Text style={styles.experience}>Experience</Text>
          <View style={styles.divider}></View>
          {/* @ts-expect-error Server Component */}
          <View style={styles.bulletPointDouble}>
            <View style={styles.bulletPointContainer}>
              {data.more_info.detailed_info.Experiences.map((answer, index) => (
                <View style={styles.bulletPoint} key={index}>
                  <Text style={styles.bulletIcon}>•</Text>
                  <Text style={styles.bulletText}>{answer}</Text>
                </View>
              ))}
            </View>
            {/* Right - Green Bullet Points */}
            <View style={styles.bulletPointContainer}>
              {data.more_info.answers_info.Experiences.map((answer, index) => (
                <View style={styles.bulletPoint} key={index}>
                  <Text style={styles.bulletIconGreen}>•</Text>
                  <Text style={styles.bulletTextGreen}>{answer}</Text>
                </View>
              ))}
            </View>
          </View>
        </View>
        <View style={styles.section}>
          <Text style={styles.skills}>Skills</Text>
          <View style={styles.divider}></View>
          <View style={styles.bulletPointDouble}>
            {/* Left - Dark Bullet Points */}
            <View style={styles.bulletPointContainer}>
              {data.more_info.detailed_info.Skills.map((answer, index) => (
                <View style={styles.bulletPoint} key={index}>
                  <Text style={styles.bulletIcon}>•</Text>
                  <Text style={styles.bulletText}>{answer}</Text>
                </View>
              ))}
            </View>

            {/* Right - Green Bullet Points */}
            <View style={styles.bulletPointContainer}>
              {data.more_info.answers_info.Skills.map((answer, index) => (
                <View style={styles.bulletPoint} key={index}>
                  <Text style={styles.bulletIconGreen}>•</Text>
                  <Text style={styles.bulletTextGreen}>{answer}</Text>
                </View>
              ))}
            </View>
          </View>
        </View>
      </Page>
    </Document>
  );
};

export default AutogeneratedCV;
